name: CI JavaScript

# on:
#   push:
#     # branches: ['main']
#   pull_request:
#     # branches: ['main']
on:
  # workflow_dispatch:
  #   outputs:
  #     artifact-id:
  #       description: "wasm-webpack artifact id"
  #       value: ${{ jobs.build_release.outputs.artifact-id }}
  workflow_call:
    outputs:
      artifact-id:
        description: "wasm-webpack artifact id"
        value: ${{ jobs.build_release.outputs.artifact-id }}

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: ./lib-js

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # - name: Temporarily modify the rust toolchain version
      #   run: rustup override set nightly
      - uses: actions/checkout@v5
      - name: Rust version
        run: rustup --version
      - name: Install dependencies
        run: |
          rustup target add wasm32-unknown-unknown
          cargo install wasm-pack --quiet
      - name: Build
        run: wasm-pack build --dev

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Format
        run: cargo fmt --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Lint
        run: cargo clippy

  outdated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Outdated
        run: ./check_updates.sh

  test:
    runs-on: ubuntu-latest
    needs: [build, format, lint, outdated]
    steps:
      - uses: actions/checkout@v5
      - name: Install dependencies
        run: |
          rustup target add wasm32-unknown-unknown
          cargo install wasm-pack --quiet
      - name: Build
        run: wasm-pack test --chrome --headless

  build_release:
    runs-on: ubuntu-latest
    needs: [build, format, lint, outdated, test]
    outputs:
      artifact-id: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v5
      - name: Install dependencies
        run: |
          rustup target add wasm32-unknown-unknown
          cargo install wasm-pack --quiet
      - name: Build
        run: wasm-pack build --release
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: wasm-webpack
          retention-days: 1
          path: ./lib-js/pkg/
      - name: Debug
        run: |
          echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
          echo 'Run ID is ${{ github.run_id }}'

  # debug:
  #   runs-on: ubuntu-latest
  #   needs: [build_release]
  #   permissions: read-all
  #   # if: github.refs == 'refs/heads/main'
  #   # if: startsWith(github.event.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/checkout@v5
  #     - env:
  #         ART_ID: ${{ needs.build_release.outputs.artifact-id }}
  #       run: echo "Artifact ID from previous job is $ART_ID"
  #     - name: Debug
  #       run: |
  #         echo 'Run ID is ${{ github.run_id }}'
  #         echo 'Artifact ID is $ART_ID'

  # publish:
  #   needs: [test]
  #   permissions: read-all
  #   # if: github.refs == 'refs/heads/main'
  #   # if: startsWith(github.event.ref, 'refs/tags/v')
  #   uses: './.github/workflows/cd-js.yml'
  #   # with:
  #   #   environment: prod
