image: rust:1.74

before_script:
  - cd lib-rs

stages:
  - test
  - coverage
  - build
  - doc
  - publish

format:
  stage: test
  script:
    - rustup component add rustfmt
    - cargo fmt --check

lint:
  stage: test
  script:
    - rustup component add clippy
    - cargo clippy

test:
  stage: test
  script:
    - cargo test

coverage:
  stage: test
  script:
    - rustup component add llvm-tools-preview
    - cargo install grcov --quiet
    - export RUSTC_BOOTSTRAP=1
    - export RUSTFLAGS="-Cinstrument-coverage"
    - export LLVM_PROFILE_FILE="your_name-%p-%m.profraw"
    - export CARGO_INCREMENTAL=0
    - export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
    - export RUSTDOCFLAGS="-Cpanic=abort"
    - cargo build
    - cargo test
    - grcov . -s . --binary-path ./target/debug/ -t html --branch --ignore-not-existing -o ./target/debug/coverage/
  artifacts:
    paths:
      - lib-rs/target/debug/coverage

build:
  stage: build
  script:
    - cargo build --release
  artifacts:
    paths:
      - lib-rs/target/release

build:wasm:
  stage: build
  script:
    - rustup target add wasm32-unknown-unknown
    - cargo install wasm-pack --quiet
    - wasm-pack build
  artifacts:
    paths:
      - lib-rs/pkg

# pages:
#   stage: publish
#   script:
#     - rm -rf public
#     - mkdir public
#     - mv target/debug/coverage public/coverage
#   dependencies:
#     - coverage
#   artifacts:
#     paths:
#       - lib-rs/public
#   only:
#     - master
